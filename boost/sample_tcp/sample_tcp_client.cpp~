#include <cstdlib>
#include <cstring>
#include <iostream>
#include <boost/asio.hpp>

using boost::asio::ip::tcp;

enum { max_length = 10 };

int main(int argc, char* argv[])
{
    try
    {
        boost::asio::io_service io_service;

        tcp::resolver resolver(io_service);
        tcp::resolver::query query(tcp::v4(), "127.0.0.1", "31400");
        tcp::resolver::iterator iterator = resolver.resolve(query);

        tcp::socket s(io_service);
        boost::asio::connect(s, iterator);

        while (1) {
            //send
            std::cout << "Enter message: ";
            char request[max_length];
            std::cin.getline(request, max_length);
            std::size_t request_length = std::strlen(request);
            boost::asio::write(s, boost::asio::buffer(request, request_length));

            //recv
            boost::asio::streambuf receive_buffer;
            boost::system::error_code error;
            boost::asio::read(s, receive_buffer, boost::asio::transfer_at_least(1), error);
            if (error && error != boost::asio::error::eof)
            {
                std::cout << "receive failed: " << error.message() << std::endl;
            }
            std::cout << "recv :" << &receive_buffer << std::endl;
        }
    }
    catch (std::exception& e)
    {
        std::cerr << "Exception: " << e.what() << "\n";
    }

    return 0;
}
